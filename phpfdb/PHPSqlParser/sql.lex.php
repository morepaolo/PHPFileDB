<?php
include 'jlex.php';


class Yylex extends JLexBase  {
	const YY_BUFFER_SIZE = 512;
	const YY_F = -1;
	const YY_NO_STATE = -1;
	const YY_NOT_ACCEPT = 0;
	const YY_START = 1;
	const YY_END = 2;
	const YY_NO_ANCHOR = 4;
	const YY_BOL = 256;
	var $YY_EOF = 257;

	function __construct($stream) {
		parent::__construct($stream);
		$this->yy_lexical_state = self::YYINITIAL;
	}

	const YYINITIAL = 0;
	static $yy_state_dtrans = array(
		0
	);
	static $yy_acpt = array(
		/* 0 */ self::YY_NOT_ACCEPT,
		/* 1 */ self::YY_NO_ANCHOR,
		/* 2 */ self::YY_NO_ANCHOR,
		/* 3 */ self::YY_NO_ANCHOR,
		/* 4 */ self::YY_NO_ANCHOR,
		/* 5 */ self::YY_NO_ANCHOR,
		/* 6 */ self::YY_NO_ANCHOR,
		/* 7 */ self::YY_NO_ANCHOR,
		/* 8 */ self::YY_NO_ANCHOR,
		/* 9 */ self::YY_NO_ANCHOR,
		/* 10 */ self::YY_NO_ANCHOR,
		/* 11 */ self::YY_NO_ANCHOR,
		/* 12 */ self::YY_NO_ANCHOR,
		/* 13 */ self::YY_NO_ANCHOR,
		/* 14 */ self::YY_NO_ANCHOR,
		/* 15 */ self::YY_NO_ANCHOR,
		/* 16 */ self::YY_NO_ANCHOR,
		/* 17 */ self::YY_NO_ANCHOR,
		/* 18 */ self::YY_NO_ANCHOR,
		/* 19 */ self::YY_NO_ANCHOR,
		/* 20 */ self::YY_NO_ANCHOR,
		/* 21 */ self::YY_NO_ANCHOR,
		/* 22 */ self::YY_NO_ANCHOR,
		/* 23 */ self::YY_NO_ANCHOR,
		/* 24 */ self::YY_NO_ANCHOR,
		/* 25 */ self::YY_NO_ANCHOR,
		/* 26 */ self::YY_NO_ANCHOR,
		/* 27 */ self::YY_NO_ANCHOR,
		/* 28 */ self::YY_NO_ANCHOR,
		/* 29 */ self::YY_NO_ANCHOR,
		/* 30 */ self::YY_NO_ANCHOR,
		/* 31 */ self::YY_NO_ANCHOR,
		/* 32 */ self::YY_NO_ANCHOR,
		/* 33 */ self::YY_NO_ANCHOR,
		/* 34 */ self::YY_NO_ANCHOR,
		/* 35 */ self::YY_NO_ANCHOR,
		/* 36 */ self::YY_NO_ANCHOR,
		/* 37 */ self::YY_NO_ANCHOR,
		/* 38 */ self::YY_NO_ANCHOR,
		/* 39 */ self::YY_NO_ANCHOR,
		/* 40 */ self::YY_NO_ANCHOR,
		/* 41 */ self::YY_NO_ANCHOR,
		/* 42 */ self::YY_NO_ANCHOR,
		/* 43 */ self::YY_NO_ANCHOR,
		/* 44 */ self::YY_NO_ANCHOR,
		/* 45 */ self::YY_NO_ANCHOR,
		/* 46 */ self::YY_NO_ANCHOR,
		/* 47 */ self::YY_NO_ANCHOR,
		/* 48 */ self::YY_NO_ANCHOR,
		/* 49 */ self::YY_NO_ANCHOR,
		/* 50 */ self::YY_NO_ANCHOR,
		/* 51 */ self::YY_NO_ANCHOR,
		/* 52 */ self::YY_NO_ANCHOR,
		/* 53 */ self::YY_NO_ANCHOR,
		/* 54 */ self::YY_NO_ANCHOR,
		/* 55 */ self::YY_NO_ANCHOR,
		/* 56 */ self::YY_NO_ANCHOR,
		/* 57 */ self::YY_NO_ANCHOR,
		/* 58 */ self::YY_NO_ANCHOR,
		/* 59 */ self::YY_NO_ANCHOR,
		/* 60 */ self::YY_NO_ANCHOR,
		/* 61 */ self::YY_NO_ANCHOR,
		/* 62 */ self::YY_NO_ANCHOR,
		/* 63 */ self::YY_NO_ANCHOR,
		/* 64 */ self::YY_NO_ANCHOR,
		/* 65 */ self::YY_NO_ANCHOR,
		/* 66 */ self::YY_NO_ANCHOR,
		/* 67 */ self::YY_NO_ANCHOR,
		/* 68 */ self::YY_NO_ANCHOR,
		/* 69 */ self::YY_NO_ANCHOR,
		/* 70 */ self::YY_NO_ANCHOR,
		/* 71 */ self::YY_NO_ANCHOR,
		/* 72 */ self::YY_NO_ANCHOR,
		/* 73 */ self::YY_NO_ANCHOR,
		/* 74 */ self::YY_NO_ANCHOR,
		/* 75 */ self::YY_NO_ANCHOR,
		/* 76 */ self::YY_NO_ANCHOR,
		/* 77 */ self::YY_NO_ANCHOR,
		/* 78 */ self::YY_NO_ANCHOR,
		/* 79 */ self::YY_NO_ANCHOR,
		/* 80 */ self::YY_NO_ANCHOR,
		/* 81 */ self::YY_NO_ANCHOR,
		/* 82 */ self::YY_NO_ANCHOR,
		/* 83 */ self::YY_NO_ANCHOR,
		/* 84 */ self::YY_NO_ANCHOR,
		/* 85 */ self::YY_NO_ANCHOR,
		/* 86 */ self::YY_NO_ANCHOR,
		/* 87 */ self::YY_NO_ANCHOR,
		/* 88 */ self::YY_NO_ANCHOR,
		/* 89 */ self::YY_NO_ANCHOR,
		/* 90 */ self::YY_NO_ANCHOR,
		/* 91 */ self::YY_NO_ANCHOR,
		/* 92 */ self::YY_NO_ANCHOR,
		/* 93 */ self::YY_NO_ANCHOR,
		/* 94 */ self::YY_NO_ANCHOR,
		/* 95 */ self::YY_NO_ANCHOR,
		/* 96 */ self::YY_NO_ANCHOR,
		/* 97 */ self::YY_NO_ANCHOR,
		/* 98 */ self::YY_NO_ANCHOR,
		/* 99 */ self::YY_NO_ANCHOR,
		/* 100 */ self::YY_NO_ANCHOR,
		/* 101 */ self::YY_NO_ANCHOR,
		/* 102 */ self::YY_NO_ANCHOR,
		/* 103 */ self::YY_NO_ANCHOR,
		/* 104 */ self::YY_NO_ANCHOR,
		/* 105 */ self::YY_NO_ANCHOR,
		/* 106 */ self::YY_NO_ANCHOR,
		/* 107 */ self::YY_NO_ANCHOR,
		/* 108 */ self::YY_NO_ANCHOR,
		/* 109 */ self::YY_NO_ANCHOR,
		/* 110 */ self::YY_NO_ANCHOR,
		/* 111 */ self::YY_NO_ANCHOR,
		/* 112 */ self::YY_NO_ANCHOR,
		/* 113 */ self::YY_NO_ANCHOR,
		/* 114 */ self::YY_NO_ANCHOR,
		/* 115 */ self::YY_NO_ANCHOR,
		/* 116 */ self::YY_NO_ANCHOR,
		/* 117 */ self::YY_NO_ANCHOR,
		/* 118 */ self::YY_NO_ANCHOR,
		/* 119 */ self::YY_NO_ANCHOR,
		/* 120 */ self::YY_NO_ANCHOR,
		/* 121 */ self::YY_NO_ANCHOR,
		/* 122 */ self::YY_NO_ANCHOR,
		/* 123 */ self::YY_NO_ANCHOR,
		/* 124 */ self::YY_NO_ANCHOR,
		/* 125 */ self::YY_NO_ANCHOR,
		/* 126 */ self::YY_NO_ANCHOR,
		/* 127 */ self::YY_NO_ANCHOR,
		/* 128 */ self::YY_NO_ANCHOR,
		/* 129 */ self::YY_NO_ANCHOR,
		/* 130 */ self::YY_NO_ANCHOR,
		/* 131 */ self::YY_NO_ANCHOR,
		/* 132 */ self::YY_NO_ANCHOR,
		/* 133 */ self::YY_NO_ANCHOR,
		/* 134 */ self::YY_NO_ANCHOR,
		/* 135 */ self::YY_NO_ANCHOR,
		/* 136 */ self::YY_NO_ANCHOR,
		/* 137 */ self::YY_NO_ANCHOR,
		/* 138 */ self::YY_NO_ANCHOR,
		/* 139 */ self::YY_NO_ANCHOR,
		/* 140 */ self::YY_NO_ANCHOR,
		/* 141 */ self::YY_NO_ANCHOR,
		/* 142 */ self::YY_NO_ANCHOR,
		/* 143 */ self::YY_NO_ANCHOR,
		/* 144 */ self::YY_NO_ANCHOR,
		/* 145 */ self::YY_NO_ANCHOR,
		/* 146 */ self::YY_NO_ANCHOR,
		/* 147 */ self::YY_NO_ANCHOR,
		/* 148 */ self::YY_NO_ANCHOR,
		/* 149 */ self::YY_NO_ANCHOR,
		/* 150 */ self::YY_NO_ANCHOR,
		/* 151 */ self::YY_NO_ANCHOR,
		/* 152 */ self::YY_NO_ANCHOR,
		/* 153 */ self::YY_NO_ANCHOR,
		/* 154 */ self::YY_NO_ANCHOR,
		/* 155 */ self::YY_NO_ANCHOR,
		/* 156 */ self::YY_NO_ANCHOR,
		/* 157 */ self::YY_NO_ANCHOR,
		/* 158 */ self::YY_NO_ANCHOR,
		/* 159 */ self::YY_NO_ANCHOR,
		/* 160 */ self::YY_NO_ANCHOR,
		/* 161 */ self::YY_NO_ANCHOR,
		/* 162 */ self::YY_NO_ANCHOR,
		/* 163 */ self::YY_NOT_ACCEPT,
		/* 164 */ self::YY_NO_ANCHOR,
		/* 165 */ self::YY_NO_ANCHOR,
		/* 166 */ self::YY_NO_ANCHOR,
		/* 167 */ self::YY_NO_ANCHOR,
		/* 168 */ self::YY_NOT_ACCEPT,
		/* 169 */ self::YY_NO_ANCHOR,
		/* 170 */ self::YY_NOT_ACCEPT,
		/* 171 */ self::YY_NO_ANCHOR,
		/* 172 */ self::YY_NOT_ACCEPT,
		/* 173 */ self::YY_NO_ANCHOR,
		/* 174 */ self::YY_NOT_ACCEPT,
		/* 175 */ self::YY_NO_ANCHOR,
		/* 176 */ self::YY_NOT_ACCEPT,
		/* 177 */ self::YY_NO_ANCHOR,
		/* 178 */ self::YY_NOT_ACCEPT,
		/* 179 */ self::YY_NO_ANCHOR,
		/* 180 */ self::YY_NOT_ACCEPT,
		/* 181 */ self::YY_NO_ANCHOR,
		/* 182 */ self::YY_NOT_ACCEPT,
		/* 183 */ self::YY_NO_ANCHOR,
		/* 184 */ self::YY_NOT_ACCEPT,
		/* 185 */ self::YY_NO_ANCHOR,
		/* 186 */ self::YY_NOT_ACCEPT,
		/* 187 */ self::YY_NO_ANCHOR,
		/* 188 */ self::YY_NO_ANCHOR,
		/* 189 */ self::YY_NO_ANCHOR,
		/* 190 */ self::YY_NO_ANCHOR,
		/* 191 */ self::YY_NO_ANCHOR,
		/* 192 */ self::YY_NO_ANCHOR,
		/* 193 */ self::YY_NO_ANCHOR,
		/* 194 */ self::YY_NO_ANCHOR,
		/* 195 */ self::YY_NO_ANCHOR,
		/* 196 */ self::YY_NO_ANCHOR,
		/* 197 */ self::YY_NO_ANCHOR,
		/* 198 */ self::YY_NO_ANCHOR,
		/* 199 */ self::YY_NO_ANCHOR,
		/* 200 */ self::YY_NO_ANCHOR,
		/* 201 */ self::YY_NO_ANCHOR,
		/* 202 */ self::YY_NO_ANCHOR,
		/* 203 */ self::YY_NO_ANCHOR,
		/* 204 */ self::YY_NO_ANCHOR,
		/* 205 */ self::YY_NO_ANCHOR,
		/* 206 */ self::YY_NO_ANCHOR,
		/* 207 */ self::YY_NO_ANCHOR,
		/* 208 */ self::YY_NO_ANCHOR,
		/* 209 */ self::YY_NO_ANCHOR,
		/* 210 */ self::YY_NO_ANCHOR,
		/* 211 */ self::YY_NO_ANCHOR,
		/* 212 */ self::YY_NO_ANCHOR,
		/* 213 */ self::YY_NO_ANCHOR,
		/* 214 */ self::YY_NO_ANCHOR,
		/* 215 */ self::YY_NO_ANCHOR,
		/* 216 */ self::YY_NO_ANCHOR,
		/* 217 */ self::YY_NO_ANCHOR,
		/* 218 */ self::YY_NO_ANCHOR,
		/* 219 */ self::YY_NO_ANCHOR,
		/* 220 */ self::YY_NO_ANCHOR,
		/* 221 */ self::YY_NO_ANCHOR,
		/* 222 */ self::YY_NO_ANCHOR,
		/* 223 */ self::YY_NO_ANCHOR,
		/* 224 */ self::YY_NO_ANCHOR,
		/* 225 */ self::YY_NO_ANCHOR,
		/* 226 */ self::YY_NO_ANCHOR,
		/* 227 */ self::YY_NO_ANCHOR,
		/* 228 */ self::YY_NO_ANCHOR,
		/* 229 */ self::YY_NO_ANCHOR,
		/* 230 */ self::YY_NO_ANCHOR,
		/* 231 */ self::YY_NO_ANCHOR,
		/* 232 */ self::YY_NO_ANCHOR,
		/* 233 */ self::YY_NO_ANCHOR,
		/* 234 */ self::YY_NO_ANCHOR,
		/* 235 */ self::YY_NO_ANCHOR,
		/* 236 */ self::YY_NO_ANCHOR,
		/* 237 */ self::YY_NO_ANCHOR,
		/* 238 */ self::YY_NO_ANCHOR,
		/* 239 */ self::YY_NO_ANCHOR,
		/* 240 */ self::YY_NO_ANCHOR,
		/* 241 */ self::YY_NO_ANCHOR,
		/* 242 */ self::YY_NO_ANCHOR,
		/* 243 */ self::YY_NO_ANCHOR,
		/* 244 */ self::YY_NO_ANCHOR,
		/* 245 */ self::YY_NO_ANCHOR,
		/* 246 */ self::YY_NO_ANCHOR,
		/* 247 */ self::YY_NO_ANCHOR,
		/* 248 */ self::YY_NO_ANCHOR,
		/* 249 */ self::YY_NO_ANCHOR,
		/* 250 */ self::YY_NO_ANCHOR,
		/* 251 */ self::YY_NO_ANCHOR,
		/* 252 */ self::YY_NO_ANCHOR,
		/* 253 */ self::YY_NO_ANCHOR,
		/* 254 */ self::YY_NO_ANCHOR,
		/* 255 */ self::YY_NO_ANCHOR,
		/* 256 */ self::YY_NO_ANCHOR,
		/* 257 */ self::YY_NO_ANCHOR,
		/* 258 */ self::YY_NO_ANCHOR,
		/* 259 */ self::YY_NO_ANCHOR,
		/* 260 */ self::YY_NO_ANCHOR,
		/* 261 */ self::YY_NO_ANCHOR,
		/* 262 */ self::YY_NO_ANCHOR,
		/* 263 */ self::YY_NO_ANCHOR,
		/* 264 */ self::YY_NO_ANCHOR,
		/* 265 */ self::YY_NO_ANCHOR,
		/* 266 */ self::YY_NO_ANCHOR,
		/* 267 */ self::YY_NO_ANCHOR,
		/* 268 */ self::YY_NO_ANCHOR,
		/* 269 */ self::YY_NO_ANCHOR,
		/* 270 */ self::YY_NO_ANCHOR,
		/* 271 */ self::YY_NO_ANCHOR,
		/* 272 */ self::YY_NO_ANCHOR,
		/* 273 */ self::YY_NO_ANCHOR,
		/* 274 */ self::YY_NO_ANCHOR,
		/* 275 */ self::YY_NO_ANCHOR,
		/* 276 */ self::YY_NO_ANCHOR,
		/* 277 */ self::YY_NO_ANCHOR,
		/* 278 */ self::YY_NO_ANCHOR,
		/* 279 */ self::YY_NO_ANCHOR,
		/* 280 */ self::YY_NO_ANCHOR,
		/* 281 */ self::YY_NO_ANCHOR,
		/* 282 */ self::YY_NO_ANCHOR,
		/* 283 */ self::YY_NO_ANCHOR,
		/* 284 */ self::YY_NO_ANCHOR,
		/* 285 */ self::YY_NO_ANCHOR,
		/* 286 */ self::YY_NO_ANCHOR,
		/* 287 */ self::YY_NO_ANCHOR,
		/* 288 */ self::YY_NO_ANCHOR,
		/* 289 */ self::YY_NO_ANCHOR,
		/* 290 */ self::YY_NO_ANCHOR,
		/* 291 */ self::YY_NO_ANCHOR,
		/* 292 */ self::YY_NO_ANCHOR,
		/* 293 */ self::YY_NO_ANCHOR,
		/* 294 */ self::YY_NO_ANCHOR,
		/* 295 */ self::YY_NO_ANCHOR,
		/* 296 */ self::YY_NO_ANCHOR,
		/* 297 */ self::YY_NO_ANCHOR,
		/* 298 */ self::YY_NO_ANCHOR,
		/* 299 */ self::YY_NO_ANCHOR,
		/* 300 */ self::YY_NO_ANCHOR,
		/* 301 */ self::YY_NO_ANCHOR,
		/* 302 */ self::YY_NO_ANCHOR,
		/* 303 */ self::YY_NO_ANCHOR,
		/* 304 */ self::YY_NO_ANCHOR,
		/* 305 */ self::YY_NO_ANCHOR,
		/* 306 */ self::YY_NO_ANCHOR,
		/* 307 */ self::YY_NO_ANCHOR,
		/* 308 */ self::YY_NO_ANCHOR,
		/* 309 */ self::YY_NO_ANCHOR,
		/* 310 */ self::YY_NO_ANCHOR,
		/* 311 */ self::YY_NO_ANCHOR,
		/* 312 */ self::YY_NO_ANCHOR,
		/* 313 */ self::YY_NO_ANCHOR,
		/* 314 */ self::YY_NO_ANCHOR,
		/* 315 */ self::YY_NO_ANCHOR,
		/* 316 */ self::YY_NO_ANCHOR,
		/* 317 */ self::YY_NO_ANCHOR,
		/* 318 */ self::YY_NO_ANCHOR,
		/* 319 */ self::YY_NO_ANCHOR,
		/* 320 */ self::YY_NO_ANCHOR,
		/* 321 */ self::YY_NO_ANCHOR,
		/* 322 */ self::YY_NO_ANCHOR,
		/* 323 */ self::YY_NO_ANCHOR,
		/* 324 */ self::YY_NO_ANCHOR,
		/* 325 */ self::YY_NO_ANCHOR,
		/* 326 */ self::YY_NO_ANCHOR,
		/* 327 */ self::YY_NO_ANCHOR,
		/* 328 */ self::YY_NO_ANCHOR,
		/* 329 */ self::YY_NO_ANCHOR,
		/* 330 */ self::YY_NO_ANCHOR,
		/* 331 */ self::YY_NO_ANCHOR,
		/* 332 */ self::YY_NO_ANCHOR,
		/* 333 */ self::YY_NO_ANCHOR,
		/* 334 */ self::YY_NO_ANCHOR,
		/* 335 */ self::YY_NO_ANCHOR,
		/* 336 */ self::YY_NO_ANCHOR,
		/* 337 */ self::YY_NO_ANCHOR,
		/* 338 */ self::YY_NO_ANCHOR,
		/* 339 */ self::YY_NO_ANCHOR,
		/* 340 */ self::YY_NO_ANCHOR,
		/* 341 */ self::YY_NO_ANCHOR,
		/* 342 */ self::YY_NO_ANCHOR,
		/* 343 */ self::YY_NO_ANCHOR,
		/* 344 */ self::YY_NO_ANCHOR,
		/* 345 */ self::YY_NO_ANCHOR,
		/* 346 */ self::YY_NO_ANCHOR,
		/* 347 */ self::YY_NO_ANCHOR,
		/* 348 */ self::YY_NO_ANCHOR,
		/* 349 */ self::YY_NO_ANCHOR,
		/* 350 */ self::YY_NO_ANCHOR,
		/* 351 */ self::YY_NO_ANCHOR,
		/* 352 */ self::YY_NO_ANCHOR,
		/* 353 */ self::YY_NO_ANCHOR,
		/* 354 */ self::YY_NO_ANCHOR,
		/* 355 */ self::YY_NO_ANCHOR,
		/* 356 */ self::YY_NO_ANCHOR,
		/* 357 */ self::YY_NO_ANCHOR,
		/* 358 */ self::YY_NO_ANCHOR,
		/* 359 */ self::YY_NO_ANCHOR,
		/* 360 */ self::YY_NO_ANCHOR,
		/* 361 */ self::YY_NO_ANCHOR,
		/* 362 */ self::YY_NO_ANCHOR,
		/* 363 */ self::YY_NO_ANCHOR,
		/* 364 */ self::YY_NO_ANCHOR,
		/* 365 */ self::YY_NO_ANCHOR,
		/* 366 */ self::YY_NO_ANCHOR,
		/* 367 */ self::YY_NO_ANCHOR,
		/* 368 */ self::YY_NO_ANCHOR,
		/* 369 */ self::YY_NO_ANCHOR,
		/* 370 */ self::YY_NO_ANCHOR,
		/* 371 */ self::YY_NO_ANCHOR,
		/* 372 */ self::YY_NO_ANCHOR,
		/* 373 */ self::YY_NO_ANCHOR,
		/* 374 */ self::YY_NO_ANCHOR,
		/* 375 */ self::YY_NO_ANCHOR,
		/* 376 */ self::YY_NO_ANCHOR,
		/* 377 */ self::YY_NO_ANCHOR,
		/* 378 */ self::YY_NO_ANCHOR,
		/* 379 */ self::YY_NO_ANCHOR,
		/* 380 */ self::YY_NO_ANCHOR,
		/* 381 */ self::YY_NO_ANCHOR,
		/* 382 */ self::YY_NO_ANCHOR,
		/* 383 */ self::YY_NO_ANCHOR,
		/* 384 */ self::YY_NO_ANCHOR,
		/* 385 */ self::YY_NO_ANCHOR,
		/* 386 */ self::YY_NO_ANCHOR,
		/* 387 */ self::YY_NO_ANCHOR,
		/* 388 */ self::YY_NO_ANCHOR,
		/* 389 */ self::YY_NO_ANCHOR,
		/* 390 */ self::YY_NO_ANCHOR,
		/* 391 */ self::YY_NO_ANCHOR,
		/* 392 */ self::YY_NO_ANCHOR,
		/* 393 */ self::YY_NO_ANCHOR,
		/* 394 */ self::YY_NO_ANCHOR,
		/* 395 */ self::YY_NO_ANCHOR,
		/* 396 */ self::YY_NO_ANCHOR,
		/* 397 */ self::YY_NO_ANCHOR,
		/* 398 */ self::YY_NO_ANCHOR,
		/* 399 */ self::YY_NO_ANCHOR,
		/* 400 */ self::YY_NO_ANCHOR,
		/* 401 */ self::YY_NO_ANCHOR,
		/* 402 */ self::YY_NO_ANCHOR,
		/* 403 */ self::YY_NO_ANCHOR,
		/* 404 */ self::YY_NO_ANCHOR,
		/* 405 */ self::YY_NO_ANCHOR,
		/* 406 */ self::YY_NO_ANCHOR,
		/* 407 */ self::YY_NO_ANCHOR,
		/* 408 */ self::YY_NO_ANCHOR,
		/* 409 */ self::YY_NO_ANCHOR,
		/* 410 */ self::YY_NO_ANCHOR,
		/* 411 */ self::YY_NO_ANCHOR,
		/* 412 */ self::YY_NO_ANCHOR,
		/* 413 */ self::YY_NO_ANCHOR,
		/* 414 */ self::YY_NO_ANCHOR,
		/* 415 */ self::YY_NO_ANCHOR,
		/* 416 */ self::YY_NO_ANCHOR,
		/* 417 */ self::YY_NO_ANCHOR,
		/* 418 */ self::YY_NO_ANCHOR,
		/* 419 */ self::YY_NO_ANCHOR,
		/* 420 */ self::YY_NO_ANCHOR,
		/* 421 */ self::YY_NO_ANCHOR,
		/* 422 */ self::YY_NO_ANCHOR,
		/* 423 */ self::YY_NO_ANCHOR,
		/* 424 */ self::YY_NO_ANCHOR,
		/* 425 */ self::YY_NO_ANCHOR,
		/* 426 */ self::YY_NO_ANCHOR,
		/* 427 */ self::YY_NO_ANCHOR,
		/* 428 */ self::YY_NO_ANCHOR,
		/* 429 */ self::YY_NO_ANCHOR,
		/* 430 */ self::YY_NO_ANCHOR,
		/* 431 */ self::YY_NO_ANCHOR,
		/* 432 */ self::YY_NO_ANCHOR,
		/* 433 */ self::YY_NO_ANCHOR,
		/* 434 */ self::YY_NO_ANCHOR,
		/* 435 */ self::YY_NO_ANCHOR,
		/* 436 */ self::YY_NO_ANCHOR,
		/* 437 */ self::YY_NO_ANCHOR,
		/* 438 */ self::YY_NO_ANCHOR,
		/* 439 */ self::YY_NO_ANCHOR,
		/* 440 */ self::YY_NO_ANCHOR,
		/* 441 */ self::YY_NO_ANCHOR,
		/* 442 */ self::YY_NO_ANCHOR,
		/* 443 */ self::YY_NO_ANCHOR,
		/* 444 */ self::YY_NO_ANCHOR,
		/* 445 */ self::YY_NO_ANCHOR,
		/* 446 */ self::YY_NO_ANCHOR,
		/* 447 */ self::YY_NO_ANCHOR,
		/* 448 */ self::YY_NO_ANCHOR,
		/* 449 */ self::YY_NO_ANCHOR,
		/* 450 */ self::YY_NO_ANCHOR,
		/* 451 */ self::YY_NO_ANCHOR,
		/* 452 */ self::YY_NO_ANCHOR,
		/* 453 */ self::YY_NO_ANCHOR,
		/* 454 */ self::YY_NO_ANCHOR,
		/* 455 */ self::YY_NO_ANCHOR,
		/* 456 */ self::YY_NO_ANCHOR,
		/* 457 */ self::YY_NO_ANCHOR,
		/* 458 */ self::YY_NO_ANCHOR,
		/* 459 */ self::YY_NO_ANCHOR,
		/* 460 */ self::YY_NO_ANCHOR,
		/* 461 */ self::YY_NO_ANCHOR,
		/* 462 */ self::YY_NO_ANCHOR,
		/* 463 */ self::YY_NO_ANCHOR,
		/* 464 */ self::YY_NO_ANCHOR,
		/* 465 */ self::YY_NO_ANCHOR,
		/* 466 */ self::YY_NO_ANCHOR,
		/* 467 */ self::YY_NO_ANCHOR,
		/* 468 */ self::YY_NO_ANCHOR,
		/* 469 */ self::YY_NO_ANCHOR,
		/* 470 */ self::YY_NO_ANCHOR,
		/* 471 */ self::YY_NO_ANCHOR,
		/* 472 */ self::YY_NO_ANCHOR,
		/* 473 */ self::YY_NO_ANCHOR,
		/* 474 */ self::YY_NO_ANCHOR,
		/* 475 */ self::YY_NO_ANCHOR,
		/* 476 */ self::YY_NO_ANCHOR,
		/* 477 */ self::YY_NO_ANCHOR,
		/* 478 */ self::YY_NO_ANCHOR,
		/* 479 */ self::YY_NO_ANCHOR,
		/* 480 */ self::YY_NO_ANCHOR,
		/* 481 */ self::YY_NO_ANCHOR,
		/* 482 */ self::YY_NO_ANCHOR,
		/* 483 */ self::YY_NO_ANCHOR,
		/* 484 */ self::YY_NO_ANCHOR,
		/* 485 */ self::YY_NO_ANCHOR,
		/* 486 */ self::YY_NO_ANCHOR,
		/* 487 */ self::YY_NO_ANCHOR,
		/* 488 */ self::YY_NO_ANCHOR,
		/* 489 */ self::YY_NO_ANCHOR,
		/* 490 */ self::YY_NO_ANCHOR,
		/* 491 */ self::YY_NO_ANCHOR,
		/* 492 */ self::YY_NO_ANCHOR,
		/* 493 */ self::YY_NO_ANCHOR,
		/* 494 */ self::YY_NO_ANCHOR,
		/* 495 */ self::YY_NO_ANCHOR,
		/* 496 */ self::YY_NO_ANCHOR,
		/* 497 */ self::YY_NO_ANCHOR,
		/* 498 */ self::YY_NO_ANCHOR,
		/* 499 */ self::YY_NO_ANCHOR,
		/* 500 */ self::YY_NO_ANCHOR,
		/* 501 */ self::YY_NO_ANCHOR,
		/* 502 */ self::YY_NO_ANCHOR,
		/* 503 */ self::YY_NO_ANCHOR,
		/* 504 */ self::YY_NO_ANCHOR,
		/* 505 */ self::YY_NO_ANCHOR,
		/* 506 */ self::YY_NO_ANCHOR,
		/* 507 */ self::YY_NO_ANCHOR,
		/* 508 */ self::YY_NO_ANCHOR,
		/* 509 */ self::YY_NO_ANCHOR,
		/* 510 */ self::YY_NO_ANCHOR,
		/* 511 */ self::YY_NO_ANCHOR,
		/* 512 */ self::YY_NO_ANCHOR,
		/* 513 */ self::YY_NO_ANCHOR,
		/* 514 */ self::YY_NO_ANCHOR,
		/* 515 */ self::YY_NO_ANCHOR,
		/* 516 */ self::YY_NO_ANCHOR,
		/* 517 */ self::YY_NO_ANCHOR,
		/* 518 */ self::YY_NO_ANCHOR,
		/* 519 */ self::YY_NO_ANCHOR,
		/* 520 */ self::YY_NO_ANCHOR,
		/* 521 */ self::YY_NO_ANCHOR,
		/* 522 */ self::YY_NO_ANCHOR,
		/* 523 */ self::YY_NO_ANCHOR,
		/* 524 */ self::YY_NO_ANCHOR,
		/* 525 */ self::YY_NO_ANCHOR,
		/* 526 */ self::YY_NO_ANCHOR,
		/* 527 */ self::YY_NO_ANCHOR,
		/* 528 */ self::YY_NO_ANCHOR,
		/* 529 */ self::YY_NO_ANCHOR,
		/* 530 */ self::YY_NO_ANCHOR,
		/* 531 */ self::YY_NO_ANCHOR,
		/* 532 */ self::YY_NO_ANCHOR,
		/* 533 */ self::YY_NO_ANCHOR,
		/* 534 */ self::YY_NO_ANCHOR,
		/* 535 */ self::YY_NO_ANCHOR,
		/* 536 */ self::YY_NO_ANCHOR,
		/* 537 */ self::YY_NO_ANCHOR,
		/* 538 */ self::YY_NO_ANCHOR,
		/* 539 */ self::YY_NO_ANCHOR,
		/* 540 */ self::YY_NO_ANCHOR,
		/* 541 */ self::YY_NO_ANCHOR,
		/* 542 */ self::YY_NO_ANCHOR,
		/* 543 */ self::YY_NO_ANCHOR,
		/* 544 */ self::YY_NO_ANCHOR,
		/* 545 */ self::YY_NO_ANCHOR,
		/* 546 */ self::YY_NO_ANCHOR,
		/* 547 */ self::YY_NO_ANCHOR,
		/* 548 */ self::YY_NO_ANCHOR,
		/* 549 */ self::YY_NO_ANCHOR,
		/* 550 */ self::YY_NO_ANCHOR,
		/* 551 */ self::YY_NO_ANCHOR,
		/* 552 */ self::YY_NO_ANCHOR,
		/* 553 */ self::YY_NO_ANCHOR,
		/* 554 */ self::YY_NO_ANCHOR,
		/* 555 */ self::YY_NO_ANCHOR,
		/* 556 */ self::YY_NO_ANCHOR,
		/* 557 */ self::YY_NO_ANCHOR,
		/* 558 */ self::YY_NO_ANCHOR,
		/* 559 */ self::YY_NO_ANCHOR,
		/* 560 */ self::YY_NO_ANCHOR,
		/* 561 */ self::YY_NO_ANCHOR,
		/* 562 */ self::YY_NO_ANCHOR,
		/* 563 */ self::YY_NO_ANCHOR,
		/* 564 */ self::YY_NO_ANCHOR,
		/* 565 */ self::YY_NO_ANCHOR,
		/* 566 */ self::YY_NO_ANCHOR,
		/* 567 */ self::YY_NO_ANCHOR,
		/* 568 */ self::YY_NO_ANCHOR,
		/* 569 */ self::YY_NO_ANCHOR,
		/* 570 */ self::YY_NO_ANCHOR,
		/* 571 */ self::YY_NO_ANCHOR,
		/* 572 */ self::YY_NO_ANCHOR,
		/* 573 */ self::YY_NO_ANCHOR,
		/* 574 */ self::YY_NO_ANCHOR,
		/* 575 */ self::YY_NO_ANCHOR,
		/* 576 */ self::YY_NO_ANCHOR,
		/* 577 */ self::YY_NO_ANCHOR,
		/* 578 */ self::YY_NO_ANCHOR,
		/* 579 */ self::YY_NO_ANCHOR,
		/* 580 */ self::YY_NO_ANCHOR,
		/* 581 */ self::YY_NO_ANCHOR,
		/* 582 */ self::YY_NO_ANCHOR,
		/* 583 */ self::YY_NO_ANCHOR,
		/* 584 */ self::YY_NO_ANCHOR,
		/* 585 */ self::YY_NO_ANCHOR,
		/* 586 */ self::YY_NO_ANCHOR,
		/* 587 */ self::YY_NO_ANCHOR,
		/* 588 */ self::YY_NO_ANCHOR,
		/* 589 */ self::YY_NO_ANCHOR
	);
		static $yy_cmap = array(
 46, 46, 46, 46, 46, 46, 46, 46, 46, 26, 50, 46, 51, 49, 46, 46, 46, 46, 46, 46,
 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 26, 46, 46, 46, 46, 46, 46, 47,
 37, 38, 33, 39, 36, 40, 35, 34, 32, 31, 29, 30, 45, 45, 45, 45, 45, 45, 46, 41,
 43, 42, 44, 46, 46, 1, 21, 12, 4, 20, 25, 6, 16, 8, 27, 23, 2, 7, 3, 13,
 24, 28, 17, 10, 14, 11, 5, 22, 9, 15, 18, 46, 48, 46, 46, 19, 46, 1, 21, 12,
 4, 20, 25, 6, 16, 8, 27, 23, 2, 7, 3, 13, 24, 28, 17, 10, 14, 11, 5, 22,
 9, 15, 18, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 0, 0,);

		static $yy_rmap = array(
 0, 1, 2, 1, 3, 1, 1, 4, 1, 1, 1, 1, 5, 1, 1, 6, 7, 8, 9, 10,
 9, 9, 11, 12, 9, 9, 9, 1, 1, 1, 1, 9, 9, 9, 9, 9, 9, 13, 9, 9,
 14, 9, 15, 9, 16, 9, 9, 9, 9, 9, 9, 9, 9, 17, 18, 19, 20, 21, 9, 9,
 22, 9, 9, 9, 9, 23, 9, 9, 9, 9, 9, 9, 9, 9, 9, 24, 25, 9, 9, 9,
 9, 9, 9, 9, 9, 9, 26, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 27, 9, 9, 9, 9,
 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
 9, 9, 9, 28, 29, 30, 9, 1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 19, 41,
 42, 43, 20, 44, 45, 46, 26, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 9, 9, 9, 9,
 4, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294,
 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314,
 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334,
 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354,
 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374,
 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394,
 395, 396, 9, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
 434, 435, 436, 437, 438, 439, 440, 441, 442, 443,);

		static $yy_nxt = array(
array(
 1, 2, 164, 169, 421, 473, 506, 527, 171, 542, 554, 561, 565, 173, 175, 568, 569, 570, 542, -1,
 571, 177, 572, 573, 179, 574, 3, 575, 542, 4, 4, 4, 4, 5, 6, 7, 8, 9, 10, 11,
 12, 13, 14, 15, 16, 4, -1, 163, -1, -1, 3, 3,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 181, 183, 542, 185, 542, 542, 542, 542, 17, 576, 577, 542, 578, 542, 542, 542, 542, 542,
 542, 187, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 168, -1, -1, -1, -1, -1, -1, -1, -1, 4, 4, 4, 4, -1, -1, 165, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 170, -1, -1, -1, -1, -1, -1, -1, -1, 420, 420, 420, 420, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 420, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 172, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, 27, -1, 28, -1, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 228, 542, 542, 542, 35, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 243, 544, 542, 542, 542, 542, 542, 435, 542, 542, 542, 44, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 547, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 439, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 62, 542, 277, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 279, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 493, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 70, 542, 542, 542, 542, 542, 542,
 285, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 307, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 498, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 521, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, 55, 55, 55, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, 56, 56, 56, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 56, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
 57, 57, 57, 57, 57, 57, 57, 57, 57, -1, -1, 57,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 87, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 559, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 328, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 499, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, 86, 86, 86, 86, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 86, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 468,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
 163, 163, 163, 163, 163, 163, 163, 30, 174, 163, 163, 163,
),
array(
 -1, 579, 542, 18, 542, 542, 542, 542, 580, 542, 542, 542, 542, 188, 542, 542, 542, 542, 542, 542,
 581, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 180, -1, -1, -1, -1, -1, -1, -1, -1, 165, 165, 165, 165, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 165, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, 55, 55, 55, -1, -1, -1, -1, -1, -1, 178,
 178, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 582, 542, 189, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, 56, 56, 56, -1, -1, -1, -1, -1, -1, 182,
 182, -1, -1, -1, -1, 56, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 19, 542, 542, 542, 542, 542, 542, 20, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 21, 542, 542, 542, 542, 542, 542, 542, 214, 542, 542, 542, 542, 542, 22, 542, 542,
 542, 542, 542, 542, 215, 23, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
 163, 163, 163, 163, 163, 163, 163, 163, 163, -1, -1, 163,
),
array(
 -1, 216, 542, 542, 542, 542, 542, 542, 426, 542, 542, 542, 542, 24, 542, 542, 542, 422, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 184, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, 176, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 475, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 25, 542, 542, 542, 542,
 430, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 26, 542, 542, 224, 542, 225, 542, 542, 542, 226, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, 86, 86, 86, 86, -1, -1, -1, -1, -1, -1, 186,
 186, -1, -1, -1, -1, 86, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 31, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 32, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 33, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 167, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 34, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 36, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 37, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 38, 542, 542, 542, 542, 542,
 542, 542, 39, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 235, 40, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 531, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 583, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 236, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 480, 543, 542, 542, 542, 509, 542, 542, 542, 237, 542, 238, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 477, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 239, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 432, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 240, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 241, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, 176, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 242, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 433, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 41, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 42, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 545, 43, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 244, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 45, 542, 542, 245, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 46, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 485, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 246, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 514, 542, 542, 542, 542, 542, 542, 542, 542, 542, 247, 542, 47, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 248, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 249, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 251, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 555, 542, 542, 542, 254, 542, 542, 48, 434, 542, 542, 49, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 255, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 482, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 256, 542, 542, 542, 542, 542, 542, 542,
 584, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 533, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 258, 542, 542, 542, 542, 542,
 259, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 50, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 436, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 442, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 262, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 486, 542, 542, 542, 542, 542, 542, 542, 542, 532, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 263, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 586, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 488, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 51, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 438, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 52, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 515, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 53, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 270, 542, 542, 542, 542, 271, 542, 542, 542, 542, 542, 542,
 444, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 546, 542, 542, 542, 542, 542, 54, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 58, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 275, 542, 542, 437, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 59, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 60, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 61, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 63, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 64, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 65, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 66, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 67, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 487, 542, 542, 542, 542, 542, 440, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 566, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 68, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 69, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 281, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 284, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 548, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 71, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 72, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 286, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 73, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 287, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 288, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 74, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 519, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 289, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 290, 542, 542, 542, 542, 542, 542, 291, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 535, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 75, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 294, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 76, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 448, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 77, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 78, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 79, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 301, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 80, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 81, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 496, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 82, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 83, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 520, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 305, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 306, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 308, 542, 451, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 538, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 309, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 310, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 84, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 85, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 539,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 88, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 89, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 551, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 313, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 495, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 90, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 91, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 92, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 93, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 558, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 322, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 94, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 323, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 95, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 325, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 326, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 96, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 97, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 98, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 99, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 100, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 101, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 332, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 455, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 523, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 102, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 334, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 103, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 337, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 104, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 456, 542, 542, 542, 542, 542, 542, 542, 542, 339, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 417, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 563, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 105, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 106, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 107, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 108, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 348, 542, 542, 542, 542, 542, 542, 542, 502, 542, 542, 542, 542,
 542, 542, 525, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 109, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 110, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 351, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 111, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 112, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 113, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 114, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 115, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 116, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 117, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 118, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 119, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 356, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 120, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 524, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 121, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 122, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 123, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 501, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 124, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 361, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 362, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 125, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 126, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 364, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 366, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 127, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 460, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 503, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 128, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 368, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 369, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 129, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 371, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 462, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 526, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 130, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 131, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 132, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 133, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 134, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 166, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 135, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 376, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 419, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 379, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 136, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 381, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 382, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 137, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 383, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 138, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 384, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 139, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 140, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 464, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 141, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 142, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 388, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 143, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 391, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 144, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 145, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 441, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 392, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 146, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 567, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 147, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 466, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 148, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 393, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 394, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 395, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 397, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 149, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 150, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 151, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 152, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 153, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 401, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 402, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 154, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 155, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 416, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 585, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 404, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 156, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 157, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 158, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 405, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 406, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 407, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 410, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 411, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 159, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 412, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 160, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 161, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 413, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 414, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 415, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 162, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 190, 542, 542, 542, 542, 542, 542, 191, 542, 542, 542, 542, 192, 542, 542, 542, 193, 542, 542,
 194, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 484, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 252, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 250, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 260, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 556, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 253, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 257, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 490, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 265, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 483, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 443, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 282, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 292, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 445, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 297, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 518, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 304, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 449, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 540, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 418, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 447, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 552, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 497, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 319, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 315, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 333, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 330, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 331, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 340, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 452, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 367, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 357, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 373, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 459, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 365, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 363, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 370, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 380, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 386, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 467, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 387, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 385, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 505, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 396, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 400, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 469, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 398, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 403, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 471, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 408, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 409, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 195, 542, 542, 542, 542, 542, 542, 196, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 261, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 264, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 268, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 512, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 267, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 513, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 280, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 266, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 293, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 522, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 588, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 489, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 302, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 316, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 549, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 320, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 300, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 312, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 335, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 318, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 454, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 349, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 457, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 342, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 343, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 358, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 374, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 378, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 372, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 465, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 389, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 470, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 197, 542, 542, 542, 198, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 272, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 269, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 562, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 274, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 491, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 557, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 299, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 536, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 450, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 453, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 560, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 345, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 324, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 338, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 344, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 458, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 360, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 377, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 504, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 390, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 199, 542, 542, 542, 542, 542, 542, 200, 542, 542, 542, 542, 201, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 273, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 278, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 276, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 587, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 303, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 295, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 314, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 327, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 321, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 329, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 341, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 541, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 352, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 461, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 446, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 517, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 283, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 311, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 296, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 589, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 336, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 350, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 346, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 354, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 375, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 202, 203, 542, 542, 204, 205, 206, 542, 542, 542, 542, 542, 542,
 207, 542, 542, 542, 542, 542, -1, 542, 208, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 516, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 298, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 353, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 355, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 347, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 500, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 209, 542, 542, 542, 542, 542, 542, 424, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 210, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 550, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 463, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 359, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 423, 542, 542, 542, 542, 542, 542, 542, 542, 427, 542, 211, 542, 542, 212, 213, 542, 542,
 428, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 317, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 399, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 479, 542, 542, 542, 542,
 425, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 217, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 474, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 429, 542, 542, 542, 542, 542, 542, 218, 542, 542, 542, 542, 219, 542, 542, 542, 542, 542, 542,
 220, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 221, 222, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 481, 542, 542, 542, 542, 478, 542, 542, 476, 542, 542, 542,
 508, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 223, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 507, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 227, 542, 542, 542, 528, 542, 542,
 511, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 510, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 229, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 230, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 231, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 431, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 530, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 232, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 233, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 234, 542, 542, 542, 542, 529, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 534, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 537, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 472, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 492, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 494, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 564, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
array(
 -1, 542, 542, 542, 542, 542, 542, 542, 553, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
 542, 542, 542, 542, 542, 542, -1, 542, 542, 542, 542, 542, 542, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 542, -1, -1, -1, -1, -1, -1,
),
);

	public function /*Yytoken*/ yylex ()
 {
		$yy_anchor = self::YY_NO_ANCHOR;
		$yy_state = self::$yy_state_dtrans[$this->yy_lexical_state];
		$yy_next_state = self::YY_NO_STATE;
		$yy_last_accept_state = self::YY_NO_STATE;
		$yy_initial = true;

		$this->yy_mark_start();
		$yy_this_accept = self::$yy_acpt[$yy_state];
		if (self::YY_NOT_ACCEPT != $yy_this_accept) {
			$yy_last_accept_state = $yy_state;
			$this->yy_mark_end();
		}
		while (true) {
			if ($yy_initial && $this->yy_at_bol) $yy_lookahead = self::YY_BOL;
			else $yy_lookahead = $this->yy_advance();
			$yy_next_state = self::$yy_nxt[self::$yy_rmap[$yy_state]][self::$yy_cmap[$yy_lookahead]];
			if ($this->YY_EOF == $yy_lookahead && true == $yy_initial) {
				return null;
			}
			if (self::YY_F != $yy_next_state) {
				$yy_state = $yy_next_state;
				$yy_initial = false;
				$yy_this_accept = self::$yy_acpt[$yy_state];
				if (self::YY_NOT_ACCEPT != $yy_this_accept) {
					$yy_last_accept_state = $yy_state;
					$this->yy_mark_end();
				}
			}
			else {
				if (self::YY_NO_STATE == $yy_last_accept_state) {
					throw new Exception("Lexical Error: Unmatched Input.");
				}
				else {
					$yy_anchor = self::$yy_acpt[$yy_last_accept_state];
					if (0 != (self::YY_END & $yy_anchor)) {
						$this->yy_move_end();
					}
					$this->yy_to_mark();
					switch ($yy_last_accept_state) {
						case 1:
							
						case -2:
							break;
						case 2:
							{ return $this->createToken("TK_NAME");}
						case -3:
							break;
						case 3:
							{ }
						case -4:
							break;
						case 4:
							{ return $this->createToken("TK_INTNUM");}
						case -5:
							break;
						case 5:
							{ return $this->createToken("TK_ASTERISK");}
						case -6:
							break;
						case 6:
							{ return $this->createToken("TK_SOLIDUS");}
						case -7:
							break;
						case 7:
							{ return $this->createToken("TK_PERIOD");}
						case -8:
							break;
						case 8:
							{ return $this->createToken("TK_COMMA");}
						case -9:
							break;
						case 9:
							{ return $this->createToken("TK_LPAR");}
						case -10:
							break;
						case 10:
							{ return $this->createToken("TK_RPAR");}
						case -11:
							break;
						case 11:
							{ return $this->createToken("TK_PLUS_SIGN");}
						case -12:
							break;
						case 12:
							{ return $this->createToken("TK_MINUS_SIGN");}
						case -13:
							break;
						case 13:
							{ return $this->createToken("TK_SEMI");}
						case -14:
							break;
						case 14:
							{ return $this->createToken("TK_OP_EQ");}
						case -15:
							break;
						case 15:
							{ return $this->createToken("TK_OP_LT");}
						case -16:
							break;
						case 16:
							{ return $this->createToken("TK_OP_GT");}
						case -17:
							break;
						case 17:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -18:
							break;
						case 18:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -19:
							break;
						case 19:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -20:
							break;
						case 20:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -21:
							break;
						case 21:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -22:
							break;
						case 22:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -23:
							break;
						case 23:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -24:
							break;
						case 24:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -25:
							break;
						case 25:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -26:
							break;
						case 26:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -27:
							break;
						case 27:
							{ return $this->createToken("TK_OP_LTEQ");}
						case -28:
							break;
						case 28:
							{ return $this->createToken("TK_OP_GTLT");}
						case -29:
							break;
						case 29:
							{ return $this->createToken("TK_OP_GTEQ");}
						case -30:
							break;
						case 30:
							{return $this->createToken("TK_STRING");}
						case -31:
							break;
						case 31:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -32:
							break;
						case 32:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -33:
							break;
						case 33:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -34:
							break;
						case 34:
							{ return $this->createToken("TK_AMMSC"); }
						case -35:
							break;
						case 35:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -36:
							break;
						case 36:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -37:
							break;
						case 37:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -38:
							break;
						case 38:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -39:
							break;
						case 39:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -40:
							break;
						case 40:
							{ return $this->createToken("TK_DAY"); }
						case -41:
							break;
						case 41:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -42:
							break;
						case 42:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -43:
							break;
						case 43:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -44:
							break;
						case 44:
							{ return $this->createToken("TK_INTEGER"); }
						case -45:
							break;
						case 45:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -46:
							break;
						case 46:
							{ return $this->createToken("TK_AMMSC"); }
						case -47:
							break;
						case 47:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -48:
							break;
						case 48:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -49:
							break;
						case 49:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -50:
							break;
						case 50:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -51:
							break;
						case 51:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -52:
							break;
						case 52:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -53:
							break;
						case 53:
							{ return $this->createToken("TK_POW"); }
						case -54:
							break;
						case 54:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -55:
							break;
						case 55:
							{ return $this->createToken("TK_APPROXNUM");}
						case -56:
							break;
						case 56:
							{ return $this->createToken("TK_APPROXNUM");}
						case -57:
							break;
						case 57:
							{ /* return $this->createToken("TK_SINGLE_LINE_COMMENT"); */}
						case -58:
							break;
						case 58:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -59:
							break;
						case 59:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -60:
							break;
						case 60:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -61:
							break;
						case 61:
							{ return $this->createToken("TK_OP_LIKE"); }
						case -62:
							break;
						case 62:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -63:
							break;
						case 63:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -64:
							break;
						case 64:
							{ return $this->createToken("TK_NULLX"); }
						case -65:
							break;
						case 65:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -66:
							break;
						case 66:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -67:
							break;
						case 67:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -68:
							break;
						case 68:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -69:
							break;
						case 69:
							{ return $this->createToken("TK_GOTO"); }
						case -70:
							break;
						case 70:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -71:
							break;
						case 71:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -72:
							break;
						case 72:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -73:
							break;
						case 73:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -74:
							break;
						case 74:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -75:
							break;
						case 75:
							{ return $this->createToken("TK_CHARACTER"); }
						case -76:
							break;
						case 76:
							{ return $this->createToken("TK_CEIL"); }
						case -77:
							break;
						case 77:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -78:
							break;
						case 78:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -79:
							break;
						case 79:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -80:
							break;
						case 80:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -81:
							break;
						case 81:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -82:
							break;
						case 82:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -83:
							break;
						case 83:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -84:
							break;
						case 84:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -85:
							break;
						case 85:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -86:
							break;
						case 86:
							{ return $this->createToken("TK_APPROXNUM");}
						case -87:
							break;
						case 87:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -88:
							break;
						case 88:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -89:
							break;
						case 89:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -90:
							break;
						case 90:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -91:
							break;
						case 91:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -92:
							break;
						case 92:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -93:
							break;
						case 93:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -94:
							break;
						case 94:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -95:
							break;
						case 95:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -96:
							break;
						case 96:
							{ return $this->createToken("TK_COUNT"); }
						case -97:
							break;
						case 97:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -98:
							break;
						case 98:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -99:
							break;
						case 99:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -100:
							break;
						case 100:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -101:
							break;
						case 101:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -102:
							break;
						case 102:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -103:
							break;
						case 103:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -104:
							break;
						case 104:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -105:
							break;
						case 105:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -106:
							break;
						case 106:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -107:
							break;
						case 107:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -108:
							break;
						case 108:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -109:
							break;
						case 109:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -110:
							break;
						case 110:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -111:
							break;
						case 111:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -112:
							break;
						case 112:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -113:
							break;
						case 113:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -114:
							break;
						case 114:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -115:
							break;
						case 115:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -116:
							break;
						case 116:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -117:
							break;
						case 117:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -118:
							break;
						case 118:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -119:
							break;
						case 119:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -120:
							break;
						case 120:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -121:
							break;
						case 121:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -122:
							break;
						case 122:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -123:
							break;
						case 123:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -124:
							break;
						case 124:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -125:
							break;
						case 125:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -126:
							break;
						case 126:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -127:
							break;
						case 127:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -128:
							break;
						case 128:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -129:
							break;
						case 129:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -130:
							break;
						case 130:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -131:
							break;
						case 131:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -132:
							break;
						case 132:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -133:
							break;
						case 133:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -134:
							break;
						case 134:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -135:
							break;
						case 135:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -136:
							break;
						case 136:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -137:
							break;
						case 137:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -138:
							break;
						case 138:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -139:
							break;
						case 139:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -140:
							break;
						case 140:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -141:
							break;
						case 141:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -142:
							break;
						case 142:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -143:
							break;
						case 143:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -144:
							break;
						case 144:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -145:
							break;
						case 145:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -146:
							break;
						case 146:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -147:
							break;
						case 147:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -148:
							break;
						case 148:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -149:
							break;
						case 149:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -150:
							break;
						case 150:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -151:
							break;
						case 151:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -152:
							break;
						case 152:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -153:
							break;
						case 153:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -154:
							break;
						case 154:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -155:
							break;
						case 155:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -156:
							break;
						case 156:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -157:
							break;
						case 157:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -158:
							break;
						case 158:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -159:
							break;
						case 159:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -160:
							break;
						case 160:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -161:
							break;
						case 161:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -162:
							break;
						case 162:
							{ return $this->createToken("TK_".strtoupper($this->yytext())); }
						case -163:
							break;
						case 164:
							{ return $this->createToken("TK_NAME");}
						case -164:
							break;
						case 165:
							{ return $this->createToken("TK_INTNUM");}
						case -165:
							break;
						case 166:
							{ return $this->createToken("TK_INTEGER"); }
						case -166:
							break;
						case 167:
							{ return $this->createToken("TK_GOTO"); }
						case -167:
							break;
						case 169:
							{ return $this->createToken("TK_NAME");}
						case -168:
							break;
						case 171:
							{ return $this->createToken("TK_NAME");}
						case -169:
							break;
						case 173:
							{ return $this->createToken("TK_NAME");}
						case -170:
							break;
						case 175:
							{ return $this->createToken("TK_NAME");}
						case -171:
							break;
						case 177:
							{ return $this->createToken("TK_NAME");}
						case -172:
							break;
						case 179:
							{ return $this->createToken("TK_NAME");}
						case -173:
							break;
						case 181:
							{ return $this->createToken("TK_NAME");}
						case -174:
							break;
						case 183:
							{ return $this->createToken("TK_NAME");}
						case -175:
							break;
						case 185:
							{ return $this->createToken("TK_NAME");}
						case -176:
							break;
						case 187:
							{ return $this->createToken("TK_NAME");}
						case -177:
							break;
						case 188:
							{ return $this->createToken("TK_NAME");}
						case -178:
							break;
						case 189:
							{ return $this->createToken("TK_NAME");}
						case -179:
							break;
						case 190:
							{ return $this->createToken("TK_NAME");}
						case -180:
							break;
						case 191:
							{ return $this->createToken("TK_NAME");}
						case -181:
							break;
						case 192:
							{ return $this->createToken("TK_NAME");}
						case -182:
							break;
						case 193:
							{ return $this->createToken("TK_NAME");}
						case -183:
							break;
						case 194:
							{ return $this->createToken("TK_NAME");}
						case -184:
							break;
						case 195:
							{ return $this->createToken("TK_NAME");}
						case -185:
							break;
						case 196:
							{ return $this->createToken("TK_NAME");}
						case -186:
							break;
						case 197:
							{ return $this->createToken("TK_NAME");}
						case -187:
							break;
						case 198:
							{ return $this->createToken("TK_NAME");}
						case -188:
							break;
						case 199:
							{ return $this->createToken("TK_NAME");}
						case -189:
							break;
						case 200:
							{ return $this->createToken("TK_NAME");}
						case -190:
							break;
						case 201:
							{ return $this->createToken("TK_NAME");}
						case -191:
							break;
						case 202:
							{ return $this->createToken("TK_NAME");}
						case -192:
							break;
						case 203:
							{ return $this->createToken("TK_NAME");}
						case -193:
							break;
						case 204:
							{ return $this->createToken("TK_NAME");}
						case -194:
							break;
						case 205:
							{ return $this->createToken("TK_NAME");}
						case -195:
							break;
						case 206:
							{ return $this->createToken("TK_NAME");}
						case -196:
							break;
						case 207:
							{ return $this->createToken("TK_NAME");}
						case -197:
							break;
						case 208:
							{ return $this->createToken("TK_NAME");}
						case -198:
							break;
						case 209:
							{ return $this->createToken("TK_NAME");}
						case -199:
							break;
						case 210:
							{ return $this->createToken("TK_NAME");}
						case -200:
							break;
						case 211:
							{ return $this->createToken("TK_NAME");}
						case -201:
							break;
						case 212:
							{ return $this->createToken("TK_NAME");}
						case -202:
							break;
						case 213:
							{ return $this->createToken("TK_NAME");}
						case -203:
							break;
						case 214:
							{ return $this->createToken("TK_NAME");}
						case -204:
							break;
						case 215:
							{ return $this->createToken("TK_NAME");}
						case -205:
							break;
						case 216:
							{ return $this->createToken("TK_NAME");}
						case -206:
							break;
						case 217:
							{ return $this->createToken("TK_NAME");}
						case -207:
							break;
						case 218:
							{ return $this->createToken("TK_NAME");}
						case -208:
							break;
						case 219:
							{ return $this->createToken("TK_NAME");}
						case -209:
							break;
						case 220:
							{ return $this->createToken("TK_NAME");}
						case -210:
							break;
						case 221:
							{ return $this->createToken("TK_NAME");}
						case -211:
							break;
						case 222:
							{ return $this->createToken("TK_NAME");}
						case -212:
							break;
						case 223:
							{ return $this->createToken("TK_NAME");}
						case -213:
							break;
						case 224:
							{ return $this->createToken("TK_NAME");}
						case -214:
							break;
						case 225:
							{ return $this->createToken("TK_NAME");}
						case -215:
							break;
						case 226:
							{ return $this->createToken("TK_NAME");}
						case -216:
							break;
						case 227:
							{ return $this->createToken("TK_NAME");}
						case -217:
							break;
						case 228:
							{ return $this->createToken("TK_NAME");}
						case -218:
							break;
						case 229:
							{ return $this->createToken("TK_NAME");}
						case -219:
							break;
						case 230:
							{ return $this->createToken("TK_NAME");}
						case -220:
							break;
						case 231:
							{ return $this->createToken("TK_NAME");}
						case -221:
							break;
						case 232:
							{ return $this->createToken("TK_NAME");}
						case -222:
							break;
						case 233:
							{ return $this->createToken("TK_NAME");}
						case -223:
							break;
						case 234:
							{ return $this->createToken("TK_NAME");}
						case -224:
							break;
						case 235:
							{ return $this->createToken("TK_NAME");}
						case -225:
							break;
						case 236:
							{ return $this->createToken("TK_NAME");}
						case -226:
							break;
						case 237:
							{ return $this->createToken("TK_NAME");}
						case -227:
							break;
						case 238:
							{ return $this->createToken("TK_NAME");}
						case -228:
							break;
						case 239:
							{ return $this->createToken("TK_NAME");}
						case -229:
							break;
						case 240:
							{ return $this->createToken("TK_NAME");}
						case -230:
							break;
						case 241:
							{ return $this->createToken("TK_NAME");}
						case -231:
							break;
						case 242:
							{ return $this->createToken("TK_NAME");}
						case -232:
							break;
						case 243:
							{ return $this->createToken("TK_NAME");}
						case -233:
							break;
						case 244:
							{ return $this->createToken("TK_NAME");}
						case -234:
							break;
						case 245:
							{ return $this->createToken("TK_NAME");}
						case -235:
							break;
						case 246:
							{ return $this->createToken("TK_NAME");}
						case -236:
							break;
						case 247:
							{ return $this->createToken("TK_NAME");}
						case -237:
							break;
						case 248:
							{ return $this->createToken("TK_NAME");}
						case -238:
							break;
						case 249:
							{ return $this->createToken("TK_NAME");}
						case -239:
							break;
						case 250:
							{ return $this->createToken("TK_NAME");}
						case -240:
							break;
						case 251:
							{ return $this->createToken("TK_NAME");}
						case -241:
							break;
						case 252:
							{ return $this->createToken("TK_NAME");}
						case -242:
							break;
						case 253:
							{ return $this->createToken("TK_NAME");}
						case -243:
							break;
						case 254:
							{ return $this->createToken("TK_NAME");}
						case -244:
							break;
						case 255:
							{ return $this->createToken("TK_NAME");}
						case -245:
							break;
						case 256:
							{ return $this->createToken("TK_NAME");}
						case -246:
							break;
						case 257:
							{ return $this->createToken("TK_NAME");}
						case -247:
							break;
						case 258:
							{ return $this->createToken("TK_NAME");}
						case -248:
							break;
						case 259:
							{ return $this->createToken("TK_NAME");}
						case -249:
							break;
						case 260:
							{ return $this->createToken("TK_NAME");}
						case -250:
							break;
						case 261:
							{ return $this->createToken("TK_NAME");}
						case -251:
							break;
						case 262:
							{ return $this->createToken("TK_NAME");}
						case -252:
							break;
						case 263:
							{ return $this->createToken("TK_NAME");}
						case -253:
							break;
						case 264:
							{ return $this->createToken("TK_NAME");}
						case -254:
							break;
						case 265:
							{ return $this->createToken("TK_NAME");}
						case -255:
							break;
						case 266:
							{ return $this->createToken("TK_NAME");}
						case -256:
							break;
						case 267:
							{ return $this->createToken("TK_NAME");}
						case -257:
							break;
						case 268:
							{ return $this->createToken("TK_NAME");}
						case -258:
							break;
						case 269:
							{ return $this->createToken("TK_NAME");}
						case -259:
							break;
						case 270:
							{ return $this->createToken("TK_NAME");}
						case -260:
							break;
						case 271:
							{ return $this->createToken("TK_NAME");}
						case -261:
							break;
						case 272:
							{ return $this->createToken("TK_NAME");}
						case -262:
							break;
						case 273:
							{ return $this->createToken("TK_NAME");}
						case -263:
							break;
						case 274:
							{ return $this->createToken("TK_NAME");}
						case -264:
							break;
						case 275:
							{ return $this->createToken("TK_NAME");}
						case -265:
							break;
						case 276:
							{ return $this->createToken("TK_NAME");}
						case -266:
							break;
						case 277:
							{ return $this->createToken("TK_NAME");}
						case -267:
							break;
						case 278:
							{ return $this->createToken("TK_NAME");}
						case -268:
							break;
						case 279:
							{ return $this->createToken("TK_NAME");}
						case -269:
							break;
						case 280:
							{ return $this->createToken("TK_NAME");}
						case -270:
							break;
						case 281:
							{ return $this->createToken("TK_NAME");}
						case -271:
							break;
						case 282:
							{ return $this->createToken("TK_NAME");}
						case -272:
							break;
						case 283:
							{ return $this->createToken("TK_NAME");}
						case -273:
							break;
						case 284:
							{ return $this->createToken("TK_NAME");}
						case -274:
							break;
						case 285:
							{ return $this->createToken("TK_NAME");}
						case -275:
							break;
						case 286:
							{ return $this->createToken("TK_NAME");}
						case -276:
							break;
						case 287:
							{ return $this->createToken("TK_NAME");}
						case -277:
							break;
						case 288:
							{ return $this->createToken("TK_NAME");}
						case -278:
							break;
						case 289:
							{ return $this->createToken("TK_NAME");}
						case -279:
							break;
						case 290:
							{ return $this->createToken("TK_NAME");}
						case -280:
							break;
						case 291:
							{ return $this->createToken("TK_NAME");}
						case -281:
							break;
						case 292:
							{ return $this->createToken("TK_NAME");}
						case -282:
							break;
						case 293:
							{ return $this->createToken("TK_NAME");}
						case -283:
							break;
						case 294:
							{ return $this->createToken("TK_NAME");}
						case -284:
							break;
						case 295:
							{ return $this->createToken("TK_NAME");}
						case -285:
							break;
						case 296:
							{ return $this->createToken("TK_NAME");}
						case -286:
							break;
						case 297:
							{ return $this->createToken("TK_NAME");}
						case -287:
							break;
						case 298:
							{ return $this->createToken("TK_NAME");}
						case -288:
							break;
						case 299:
							{ return $this->createToken("TK_NAME");}
						case -289:
							break;
						case 300:
							{ return $this->createToken("TK_NAME");}
						case -290:
							break;
						case 301:
							{ return $this->createToken("TK_NAME");}
						case -291:
							break;
						case 302:
							{ return $this->createToken("TK_NAME");}
						case -292:
							break;
						case 303:
							{ return $this->createToken("TK_NAME");}
						case -293:
							break;
						case 304:
							{ return $this->createToken("TK_NAME");}
						case -294:
							break;
						case 305:
							{ return $this->createToken("TK_NAME");}
						case -295:
							break;
						case 306:
							{ return $this->createToken("TK_NAME");}
						case -296:
							break;
						case 307:
							{ return $this->createToken("TK_NAME");}
						case -297:
							break;
						case 308:
							{ return $this->createToken("TK_NAME");}
						case -298:
							break;
						case 309:
							{ return $this->createToken("TK_NAME");}
						case -299:
							break;
						case 310:
							{ return $this->createToken("TK_NAME");}
						case -300:
							break;
						case 311:
							{ return $this->createToken("TK_NAME");}
						case -301:
							break;
						case 312:
							{ return $this->createToken("TK_NAME");}
						case -302:
							break;
						case 313:
							{ return $this->createToken("TK_NAME");}
						case -303:
							break;
						case 314:
							{ return $this->createToken("TK_NAME");}
						case -304:
							break;
						case 315:
							{ return $this->createToken("TK_NAME");}
						case -305:
							break;
						case 316:
							{ return $this->createToken("TK_NAME");}
						case -306:
							break;
						case 317:
							{ return $this->createToken("TK_NAME");}
						case -307:
							break;
						case 318:
							{ return $this->createToken("TK_NAME");}
						case -308:
							break;
						case 319:
							{ return $this->createToken("TK_NAME");}
						case -309:
							break;
						case 320:
							{ return $this->createToken("TK_NAME");}
						case -310:
							break;
						case 321:
							{ return $this->createToken("TK_NAME");}
						case -311:
							break;
						case 322:
							{ return $this->createToken("TK_NAME");}
						case -312:
							break;
						case 323:
							{ return $this->createToken("TK_NAME");}
						case -313:
							break;
						case 324:
							{ return $this->createToken("TK_NAME");}
						case -314:
							break;
						case 325:
							{ return $this->createToken("TK_NAME");}
						case -315:
							break;
						case 326:
							{ return $this->createToken("TK_NAME");}
						case -316:
							break;
						case 327:
							{ return $this->createToken("TK_NAME");}
						case -317:
							break;
						case 328:
							{ return $this->createToken("TK_NAME");}
						case -318:
							break;
						case 329:
							{ return $this->createToken("TK_NAME");}
						case -319:
							break;
						case 330:
							{ return $this->createToken("TK_NAME");}
						case -320:
							break;
						case 331:
							{ return $this->createToken("TK_NAME");}
						case -321:
							break;
						case 332:
							{ return $this->createToken("TK_NAME");}
						case -322:
							break;
						case 333:
							{ return $this->createToken("TK_NAME");}
						case -323:
							break;
						case 334:
							{ return $this->createToken("TK_NAME");}
						case -324:
							break;
						case 335:
							{ return $this->createToken("TK_NAME");}
						case -325:
							break;
						case 336:
							{ return $this->createToken("TK_NAME");}
						case -326:
							break;
						case 337:
							{ return $this->createToken("TK_NAME");}
						case -327:
							break;
						case 338:
							{ return $this->createToken("TK_NAME");}
						case -328:
							break;
						case 339:
							{ return $this->createToken("TK_NAME");}
						case -329:
							break;
						case 340:
							{ return $this->createToken("TK_NAME");}
						case -330:
							break;
						case 341:
							{ return $this->createToken("TK_NAME");}
						case -331:
							break;
						case 342:
							{ return $this->createToken("TK_NAME");}
						case -332:
							break;
						case 343:
							{ return $this->createToken("TK_NAME");}
						case -333:
							break;
						case 344:
							{ return $this->createToken("TK_NAME");}
						case -334:
							break;
						case 345:
							{ return $this->createToken("TK_NAME");}
						case -335:
							break;
						case 346:
							{ return $this->createToken("TK_NAME");}
						case -336:
							break;
						case 347:
							{ return $this->createToken("TK_NAME");}
						case -337:
							break;
						case 348:
							{ return $this->createToken("TK_NAME");}
						case -338:
							break;
						case 349:
							{ return $this->createToken("TK_NAME");}
						case -339:
							break;
						case 350:
							{ return $this->createToken("TK_NAME");}
						case -340:
							break;
						case 351:
							{ return $this->createToken("TK_NAME");}
						case -341:
							break;
						case 352:
							{ return $this->createToken("TK_NAME");}
						case -342:
							break;
						case 353:
							{ return $this->createToken("TK_NAME");}
						case -343:
							break;
						case 354:
							{ return $this->createToken("TK_NAME");}
						case -344:
							break;
						case 355:
							{ return $this->createToken("TK_NAME");}
						case -345:
							break;
						case 356:
							{ return $this->createToken("TK_NAME");}
						case -346:
							break;
						case 357:
							{ return $this->createToken("TK_NAME");}
						case -347:
							break;
						case 358:
							{ return $this->createToken("TK_NAME");}
						case -348:
							break;
						case 359:
							{ return $this->createToken("TK_NAME");}
						case -349:
							break;
						case 360:
							{ return $this->createToken("TK_NAME");}
						case -350:
							break;
						case 361:
							{ return $this->createToken("TK_NAME");}
						case -351:
							break;
						case 362:
							{ return $this->createToken("TK_NAME");}
						case -352:
							break;
						case 363:
							{ return $this->createToken("TK_NAME");}
						case -353:
							break;
						case 364:
							{ return $this->createToken("TK_NAME");}
						case -354:
							break;
						case 365:
							{ return $this->createToken("TK_NAME");}
						case -355:
							break;
						case 366:
							{ return $this->createToken("TK_NAME");}
						case -356:
							break;
						case 367:
							{ return $this->createToken("TK_NAME");}
						case -357:
							break;
						case 368:
							{ return $this->createToken("TK_NAME");}
						case -358:
							break;
						case 369:
							{ return $this->createToken("TK_NAME");}
						case -359:
							break;
						case 370:
							{ return $this->createToken("TK_NAME");}
						case -360:
							break;
						case 371:
							{ return $this->createToken("TK_NAME");}
						case -361:
							break;
						case 372:
							{ return $this->createToken("TK_NAME");}
						case -362:
							break;
						case 373:
							{ return $this->createToken("TK_NAME");}
						case -363:
							break;
						case 374:
							{ return $this->createToken("TK_NAME");}
						case -364:
							break;
						case 375:
							{ return $this->createToken("TK_NAME");}
						case -365:
							break;
						case 376:
							{ return $this->createToken("TK_NAME");}
						case -366:
							break;
						case 377:
							{ return $this->createToken("TK_NAME");}
						case -367:
							break;
						case 378:
							{ return $this->createToken("TK_NAME");}
						case -368:
							break;
						case 379:
							{ return $this->createToken("TK_NAME");}
						case -369:
							break;
						case 380:
							{ return $this->createToken("TK_NAME");}
						case -370:
							break;
						case 381:
							{ return $this->createToken("TK_NAME");}
						case -371:
							break;
						case 382:
							{ return $this->createToken("TK_NAME");}
						case -372:
							break;
						case 383:
							{ return $this->createToken("TK_NAME");}
						case -373:
							break;
						case 384:
							{ return $this->createToken("TK_NAME");}
						case -374:
							break;
						case 385:
							{ return $this->createToken("TK_NAME");}
						case -375:
							break;
						case 386:
							{ return $this->createToken("TK_NAME");}
						case -376:
							break;
						case 387:
							{ return $this->createToken("TK_NAME");}
						case -377:
							break;
						case 388:
							{ return $this->createToken("TK_NAME");}
						case -378:
							break;
						case 389:
							{ return $this->createToken("TK_NAME");}
						case -379:
							break;
						case 390:
							{ return $this->createToken("TK_NAME");}
						case -380:
							break;
						case 391:
							{ return $this->createToken("TK_NAME");}
						case -381:
							break;
						case 392:
							{ return $this->createToken("TK_NAME");}
						case -382:
							break;
						case 393:
							{ return $this->createToken("TK_NAME");}
						case -383:
							break;
						case 394:
							{ return $this->createToken("TK_NAME");}
						case -384:
							break;
						case 395:
							{ return $this->createToken("TK_NAME");}
						case -385:
							break;
						case 396:
							{ return $this->createToken("TK_NAME");}
						case -386:
							break;
						case 397:
							{ return $this->createToken("TK_NAME");}
						case -387:
							break;
						case 398:
							{ return $this->createToken("TK_NAME");}
						case -388:
							break;
						case 399:
							{ return $this->createToken("TK_NAME");}
						case -389:
							break;
						case 400:
							{ return $this->createToken("TK_NAME");}
						case -390:
							break;
						case 401:
							{ return $this->createToken("TK_NAME");}
						case -391:
							break;
						case 402:
							{ return $this->createToken("TK_NAME");}
						case -392:
							break;
						case 403:
							{ return $this->createToken("TK_NAME");}
						case -393:
							break;
						case 404:
							{ return $this->createToken("TK_NAME");}
						case -394:
							break;
						case 405:
							{ return $this->createToken("TK_NAME");}
						case -395:
							break;
						case 406:
							{ return $this->createToken("TK_NAME");}
						case -396:
							break;
						case 407:
							{ return $this->createToken("TK_NAME");}
						case -397:
							break;
						case 408:
							{ return $this->createToken("TK_NAME");}
						case -398:
							break;
						case 409:
							{ return $this->createToken("TK_NAME");}
						case -399:
							break;
						case 410:
							{ return $this->createToken("TK_NAME");}
						case -400:
							break;
						case 411:
							{ return $this->createToken("TK_NAME");}
						case -401:
							break;
						case 412:
							{ return $this->createToken("TK_NAME");}
						case -402:
							break;
						case 413:
							{ return $this->createToken("TK_NAME");}
						case -403:
							break;
						case 414:
							{ return $this->createToken("TK_NAME");}
						case -404:
							break;
						case 415:
							{ return $this->createToken("TK_NAME");}
						case -405:
							break;
						case 416:
							{ return $this->createToken("TK_DAY"); }
						case -406:
							break;
						case 417:
							{ return $this->createToken("TK_POW"); }
						case -407:
							break;
						case 418:
							{ return $this->createToken("TK_CHARACTER"); }
						case -408:
							break;
						case 419:
							{ return $this->createToken("TK_CEIL"); }
						case -409:
							break;
						case 420:
							{ return $this->createToken("TK_INTNUM");}
						case -410:
							break;
						case 421:
							{ return $this->createToken("TK_NAME");}
						case -411:
							break;
						case 422:
							{ return $this->createToken("TK_NAME");}
						case -412:
							break;
						case 423:
							{ return $this->createToken("TK_NAME");}
						case -413:
							break;
						case 424:
							{ return $this->createToken("TK_NAME");}
						case -414:
							break;
						case 425:
							{ return $this->createToken("TK_NAME");}
						case -415:
							break;
						case 426:
							{ return $this->createToken("TK_NAME");}
						case -416:
							break;
						case 427:
							{ return $this->createToken("TK_NAME");}
						case -417:
							break;
						case 428:
							{ return $this->createToken("TK_NAME");}
						case -418:
							break;
						case 429:
							{ return $this->createToken("TK_NAME");}
						case -419:
							break;
						case 430:
							{ return $this->createToken("TK_NAME");}
						case -420:
							break;
						case 431:
							{ return $this->createToken("TK_NAME");}
						case -421:
							break;
						case 432:
							{ return $this->createToken("TK_NAME");}
						case -422:
							break;
						case 433:
							{ return $this->createToken("TK_NAME");}
						case -423:
							break;
						case 434:
							{ return $this->createToken("TK_NAME");}
						case -424:
							break;
						case 435:
							{ return $this->createToken("TK_NAME");}
						case -425:
							break;
						case 436:
							{ return $this->createToken("TK_NAME");}
						case -426:
							break;
						case 437:
							{ return $this->createToken("TK_NAME");}
						case -427:
							break;
						case 438:
							{ return $this->createToken("TK_NAME");}
						case -428:
							break;
						case 439:
							{ return $this->createToken("TK_NAME");}
						case -429:
							break;
						case 440:
							{ return $this->createToken("TK_NAME");}
						case -430:
							break;
						case 441:
							{ return $this->createToken("TK_NAME");}
						case -431:
							break;
						case 442:
							{ return $this->createToken("TK_NAME");}
						case -432:
							break;
						case 443:
							{ return $this->createToken("TK_NAME");}
						case -433:
							break;
						case 444:
							{ return $this->createToken("TK_NAME");}
						case -434:
							break;
						case 445:
							{ return $this->createToken("TK_NAME");}
						case -435:
							break;
						case 446:
							{ return $this->createToken("TK_NAME");}
						case -436:
							break;
						case 447:
							{ return $this->createToken("TK_NAME");}
						case -437:
							break;
						case 448:
							{ return $this->createToken("TK_NAME");}
						case -438:
							break;
						case 449:
							{ return $this->createToken("TK_NAME");}
						case -439:
							break;
						case 450:
							{ return $this->createToken("TK_NAME");}
						case -440:
							break;
						case 451:
							{ return $this->createToken("TK_NAME");}
						case -441:
							break;
						case 452:
							{ return $this->createToken("TK_NAME");}
						case -442:
							break;
						case 453:
							{ return $this->createToken("TK_NAME");}
						case -443:
							break;
						case 454:
							{ return $this->createToken("TK_NAME");}
						case -444:
							break;
						case 455:
							{ return $this->createToken("TK_NAME");}
						case -445:
							break;
						case 456:
							{ return $this->createToken("TK_NAME");}
						case -446:
							break;
						case 457:
							{ return $this->createToken("TK_NAME");}
						case -447:
							break;
						case 458:
							{ return $this->createToken("TK_NAME");}
						case -448:
							break;
						case 459:
							{ return $this->createToken("TK_NAME");}
						case -449:
							break;
						case 460:
							{ return $this->createToken("TK_NAME");}
						case -450:
							break;
						case 461:
							{ return $this->createToken("TK_NAME");}
						case -451:
							break;
						case 462:
							{ return $this->createToken("TK_NAME");}
						case -452:
							break;
						case 463:
							{ return $this->createToken("TK_NAME");}
						case -453:
							break;
						case 464:
							{ return $this->createToken("TK_NAME");}
						case -454:
							break;
						case 465:
							{ return $this->createToken("TK_NAME");}
						case -455:
							break;
						case 466:
							{ return $this->createToken("TK_NAME");}
						case -456:
							break;
						case 467:
							{ return $this->createToken("TK_NAME");}
						case -457:
							break;
						case 468:
							{ return $this->createToken("TK_NAME");}
						case -458:
							break;
						case 469:
							{ return $this->createToken("TK_NAME");}
						case -459:
							break;
						case 470:
							{ return $this->createToken("TK_NAME");}
						case -460:
							break;
						case 471:
							{ return $this->createToken("TK_NAME");}
						case -461:
							break;
						case 472:
							{ return $this->createToken("TK_NAME");}
						case -462:
							break;
						case 473:
							{ return $this->createToken("TK_NAME");}
						case -463:
							break;
						case 474:
							{ return $this->createToken("TK_NAME");}
						case -464:
							break;
						case 475:
							{ return $this->createToken("TK_NAME");}
						case -465:
							break;
						case 476:
							{ return $this->createToken("TK_NAME");}
						case -466:
							break;
						case 477:
							{ return $this->createToken("TK_NAME");}
						case -467:
							break;
						case 478:
							{ return $this->createToken("TK_NAME");}
						case -468:
							break;
						case 479:
							{ return $this->createToken("TK_NAME");}
						case -469:
							break;
						case 480:
							{ return $this->createToken("TK_NAME");}
						case -470:
							break;
						case 481:
							{ return $this->createToken("TK_NAME");}
						case -471:
							break;
						case 482:
							{ return $this->createToken("TK_NAME");}
						case -472:
							break;
						case 483:
							{ return $this->createToken("TK_NAME");}
						case -473:
							break;
						case 484:
							{ return $this->createToken("TK_NAME");}
						case -474:
							break;
						case 485:
							{ return $this->createToken("TK_NAME");}
						case -475:
							break;
						case 486:
							{ return $this->createToken("TK_NAME");}
						case -476:
							break;
						case 487:
							{ return $this->createToken("TK_NAME");}
						case -477:
							break;
						case 488:
							{ return $this->createToken("TK_NAME");}
						case -478:
							break;
						case 489:
							{ return $this->createToken("TK_NAME");}
						case -479:
							break;
						case 490:
							{ return $this->createToken("TK_NAME");}
						case -480:
							break;
						case 491:
							{ return $this->createToken("TK_NAME");}
						case -481:
							break;
						case 492:
							{ return $this->createToken("TK_NAME");}
						case -482:
							break;
						case 493:
							{ return $this->createToken("TK_NAME");}
						case -483:
							break;
						case 494:
							{ return $this->createToken("TK_NAME");}
						case -484:
							break;
						case 495:
							{ return $this->createToken("TK_NAME");}
						case -485:
							break;
						case 496:
							{ return $this->createToken("TK_NAME");}
						case -486:
							break;
						case 497:
							{ return $this->createToken("TK_NAME");}
						case -487:
							break;
						case 498:
							{ return $this->createToken("TK_NAME");}
						case -488:
							break;
						case 499:
							{ return $this->createToken("TK_NAME");}
						case -489:
							break;
						case 500:
							{ return $this->createToken("TK_NAME");}
						case -490:
							break;
						case 501:
							{ return $this->createToken("TK_NAME");}
						case -491:
							break;
						case 502:
							{ return $this->createToken("TK_NAME");}
						case -492:
							break;
						case 503:
							{ return $this->createToken("TK_NAME");}
						case -493:
							break;
						case 504:
							{ return $this->createToken("TK_NAME");}
						case -494:
							break;
						case 505:
							{ return $this->createToken("TK_NAME");}
						case -495:
							break;
						case 506:
							{ return $this->createToken("TK_NAME");}
						case -496:
							break;
						case 507:
							{ return $this->createToken("TK_NAME");}
						case -497:
							break;
						case 508:
							{ return $this->createToken("TK_NAME");}
						case -498:
							break;
						case 509:
							{ return $this->createToken("TK_NAME");}
						case -499:
							break;
						case 510:
							{ return $this->createToken("TK_NAME");}
						case -500:
							break;
						case 511:
							{ return $this->createToken("TK_NAME");}
						case -501:
							break;
						case 512:
							{ return $this->createToken("TK_NAME");}
						case -502:
							break;
						case 513:
							{ return $this->createToken("TK_NAME");}
						case -503:
							break;
						case 514:
							{ return $this->createToken("TK_NAME");}
						case -504:
							break;
						case 515:
							{ return $this->createToken("TK_NAME");}
						case -505:
							break;
						case 516:
							{ return $this->createToken("TK_NAME");}
						case -506:
							break;
						case 517:
							{ return $this->createToken("TK_NAME");}
						case -507:
							break;
						case 518:
							{ return $this->createToken("TK_NAME");}
						case -508:
							break;
						case 519:
							{ return $this->createToken("TK_NAME");}
						case -509:
							break;
						case 520:
							{ return $this->createToken("TK_NAME");}
						case -510:
							break;
						case 521:
							{ return $this->createToken("TK_NAME");}
						case -511:
							break;
						case 522:
							{ return $this->createToken("TK_NAME");}
						case -512:
							break;
						case 523:
							{ return $this->createToken("TK_NAME");}
						case -513:
							break;
						case 524:
							{ return $this->createToken("TK_NAME");}
						case -514:
							break;
						case 525:
							{ return $this->createToken("TK_NAME");}
						case -515:
							break;
						case 526:
							{ return $this->createToken("TK_NAME");}
						case -516:
							break;
						case 527:
							{ return $this->createToken("TK_NAME");}
						case -517:
							break;
						case 528:
							{ return $this->createToken("TK_NAME");}
						case -518:
							break;
						case 529:
							{ return $this->createToken("TK_NAME");}
						case -519:
							break;
						case 530:
							{ return $this->createToken("TK_NAME");}
						case -520:
							break;
						case 531:
							{ return $this->createToken("TK_NAME");}
						case -521:
							break;
						case 532:
							{ return $this->createToken("TK_NAME");}
						case -522:
							break;
						case 533:
							{ return $this->createToken("TK_NAME");}
						case -523:
							break;
						case 534:
							{ return $this->createToken("TK_NAME");}
						case -524:
							break;
						case 535:
							{ return $this->createToken("TK_NAME");}
						case -525:
							break;
						case 536:
							{ return $this->createToken("TK_NAME");}
						case -526:
							break;
						case 537:
							{ return $this->createToken("TK_NAME");}
						case -527:
							break;
						case 538:
							{ return $this->createToken("TK_NAME");}
						case -528:
							break;
						case 539:
							{ return $this->createToken("TK_NAME");}
						case -529:
							break;
						case 540:
							{ return $this->createToken("TK_NAME");}
						case -530:
							break;
						case 541:
							{ return $this->createToken("TK_NAME");}
						case -531:
							break;
						case 542:
							{ return $this->createToken("TK_NAME");}
						case -532:
							break;
						case 543:
							{ return $this->createToken("TK_NAME");}
						case -533:
							break;
						case 544:
							{ return $this->createToken("TK_NAME");}
						case -534:
							break;
						case 545:
							{ return $this->createToken("TK_NAME");}
						case -535:
							break;
						case 546:
							{ return $this->createToken("TK_NAME");}
						case -536:
							break;
						case 547:
							{ return $this->createToken("TK_NAME");}
						case -537:
							break;
						case 548:
							{ return $this->createToken("TK_NAME");}
						case -538:
							break;
						case 549:
							{ return $this->createToken("TK_NAME");}
						case -539:
							break;
						case 550:
							{ return $this->createToken("TK_NAME");}
						case -540:
							break;
						case 551:
							{ return $this->createToken("TK_NAME");}
						case -541:
							break;
						case 552:
							{ return $this->createToken("TK_NAME");}
						case -542:
							break;
						case 553:
							{ return $this->createToken("TK_NAME");}
						case -543:
							break;
						case 554:
							{ return $this->createToken("TK_NAME");}
						case -544:
							break;
						case 555:
							{ return $this->createToken("TK_NAME");}
						case -545:
							break;
						case 556:
							{ return $this->createToken("TK_NAME");}
						case -546:
							break;
						case 557:
							{ return $this->createToken("TK_NAME");}
						case -547:
							break;
						case 558:
							{ return $this->createToken("TK_NAME");}
						case -548:
							break;
						case 559:
							{ return $this->createToken("TK_NAME");}
						case -549:
							break;
						case 560:
							{ return $this->createToken("TK_NAME");}
						case -550:
							break;
						case 561:
							{ return $this->createToken("TK_NAME");}
						case -551:
							break;
						case 562:
							{ return $this->createToken("TK_NAME");}
						case -552:
							break;
						case 563:
							{ return $this->createToken("TK_NAME");}
						case -553:
							break;
						case 564:
							{ return $this->createToken("TK_NAME");}
						case -554:
							break;
						case 565:
							{ return $this->createToken("TK_NAME");}
						case -555:
							break;
						case 566:
							{ return $this->createToken("TK_NAME");}
						case -556:
							break;
						case 567:
							{ return $this->createToken("TK_NAME");}
						case -557:
							break;
						case 568:
							{ return $this->createToken("TK_NAME");}
						case -558:
							break;
						case 569:
							{ return $this->createToken("TK_NAME");}
						case -559:
							break;
						case 570:
							{ return $this->createToken("TK_NAME");}
						case -560:
							break;
						case 571:
							{ return $this->createToken("TK_NAME");}
						case -561:
							break;
						case 572:
							{ return $this->createToken("TK_NAME");}
						case -562:
							break;
						case 573:
							{ return $this->createToken("TK_NAME");}
						case -563:
							break;
						case 574:
							{ return $this->createToken("TK_NAME");}
						case -564:
							break;
						case 575:
							{ return $this->createToken("TK_NAME");}
						case -565:
							break;
						case 576:
							{ return $this->createToken("TK_NAME");}
						case -566:
							break;
						case 577:
							{ return $this->createToken("TK_NAME");}
						case -567:
							break;
						case 578:
							{ return $this->createToken("TK_NAME");}
						case -568:
							break;
						case 579:
							{ return $this->createToken("TK_NAME");}
						case -569:
							break;
						case 580:
							{ return $this->createToken("TK_NAME");}
						case -570:
							break;
						case 581:
							{ return $this->createToken("TK_NAME");}
						case -571:
							break;
						case 582:
							{ return $this->createToken("TK_NAME");}
						case -572:
							break;
						case 583:
							{ return $this->createToken("TK_NAME");}
						case -573:
							break;
						case 584:
							{ return $this->createToken("TK_NAME");}
						case -574:
							break;
						case 585:
							{ return $this->createToken("TK_NAME");}
						case -575:
							break;
						case 586:
							{ return $this->createToken("TK_NAME");}
						case -576:
							break;
						case 587:
							{ return $this->createToken("TK_NAME");}
						case -577:
							break;
						case 588:
							{ return $this->createToken("TK_NAME");}
						case -578:
							break;
						case 589:
							{ return $this->createToken("TK_NAME");}
						case -579:
							break;
						default:
						$this->yy_error('INTERNAL',false);
					case -1:
					}
					$yy_initial = true;
					$yy_state = self::$yy_state_dtrans[$this->yy_lexical_state];
					$yy_next_state = self::YY_NO_STATE;
					$yy_last_accept_state = self::YY_NO_STATE;
					$this->yy_mark_start();
					$yy_this_accept = self::$yy_acpt[$yy_state];
					if (self::YY_NOT_ACCEPT != $yy_this_accept) {
						$yy_last_accept_state = $yy_state;
						$this->yy_mark_end();
					}
				}
			}
		}
	}
}
